[metadata]
name = loan_management_system_backend
version = 0.1.0
description = Backend services for the educational loan management system
long_description = file: README.md
long_description_content_type = text/markdown
author = UNISA Development Team
author_email = dev@example.com
url = https://github.com/unisa/loan-management-system
classifiers =
    Development Status :: 4 - Beta
    Framework :: Django :: 4.2
    Intended Audience :: Financial and Insurance Industry
    Programming Language :: Python :: 3.11
    Topic :: Office/Business :: Financial

[options]
package_dir = 
    = src/backend
packages = find:
python_requires = >=3.11
zip_safe = False
include_package_data = True

[options.packages.find]
where = src/backend
exclude = *.tests,*.tests.*,tests.*,tests

[options.extras_require]
dev = requirements-dev.txt

[flake8]
max-line-length = 100
exclude = .git,__pycache__,*/migrations/*,venv,env,.env,.venv,dist,build,*.egg-info
ignore = E203,E231,E501,W503,F401,F403
per-file-ignores = 
    __init__.py:F401,F403
    */tests/*:F811,F401,E501
    */migrations/*:E501
max-complexity = 15
select = E,F,W,C90
statistics = True
count = True

[mypy]
python_version = 3.11
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
strict_optional = True
plugins = mypy_django_plugin.main,mypy_drf_plugin.main
ignore_missing_imports = True

[mypy.plugins.django-stubs]
django_settings_module = config.settings.test

[tool:pytest]
minversion = 7.0
testpaths = apps utils core
python_files = test_*.py
python_classes = Test*
python_functions = test_*
django_find_project = true
DJANGO_SETTINGS_MODULE = config.settings.test
addopts = --strict-markers --no-migrations --reuse-db
markers =
    unit: Mark a test as a unit test
    integration: Mark a test as an integration test
    slow: Mark a test as slow-running
    api: Mark a test as an API test
    model: Mark a test as a model test
    view: Mark a test as a view test
    serializer: Mark a test as a serializer test
    permission: Mark a test as a permission test
    service: Mark a test as a service test
    security: Mark a test as a security test

[coverage:run]
source = apps,utils,core
omit = */migrations/*,*/tests/*,*/__init__.py
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
precision = 2
show_missing = True

[isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = True
use_parentheses = True
skip = migrations
skip_glob = */migrations/*